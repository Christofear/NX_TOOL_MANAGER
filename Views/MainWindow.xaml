<Window x:Class="NX_TOOL_MANAGER.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:NX_TOOL_MANAGER"
        xmlns:views="clr-namespace:NX_TOOL_MANAGER.Views"
        xmlns:conv="clr-namespace:NX_TOOL_MANAGER.Converters"
        
        Height="720" Width="1200" MinHeight="600" MinWidth="960"
        FontFamily="Segoe UI"
        Background="#1E1E1E"
        Foreground="White"

        WindowStyle="None" 
        WindowStartupLocation="CenterScreen"
        SourceInitialized="Window_SourceInitialized"
        StateChanged="MainWindow_StateChanged">

    <WindowChrome.WindowChrome>
        <WindowChrome ResizeBorderThickness="6" CaptionHeight="32" CornerRadius="0" GlassFrameThickness="0"/>
    </WindowChrome.WindowChrome>

    <Window.Resources>
        <conv:PageIsSelectedConverter x:Key="PageIsSelectedConverter"/>
        <local:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <Style x:Key="ToolBarSeparatorStyle" TargetType="Separator">
            <Setter Property="Background" Value="#4A4A4A"/>
            <Setter Property="Width" Value="1"/>
            <Setter Property="Margin" Value="8,12"/>
        </Style>
        <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Separator">
                        <Border Height="1" Margin="2,4" BorderBrush="#4A4A4A" BorderThickness="0,1,0,0" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Grid>
                            <Border x:Name="Bd" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="IconColumn" Width="Auto" MinWidth="20"/>
                                        <ColumnDefinition x:Name="HeaderColumn" Width="*"/>
                                        <ColumnDefinition x:Name="GestureColumn" Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock x:Name="CheckMark" Grid.Column="0" Text="✓" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Hidden" FontWeight="Bold"/>
                                    <ContentPresenter x:Name="HeaderHost" Grid.Column="1" ContentSource="Header" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                                    <TextBlock Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="15,0,5,0" Foreground="#999999" VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                            <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="Fade">
                                <Border x:Name="SubmenuBorder" Background="#2D2D2D" BorderBrush="#4A4A4A" BorderThickness="1">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="Role" Value="TopLevelHeader">
                                <Setter Property="Padding" Value="8,5"/>
                                <Setter Property="Background" TargetName="Bd" Value="Transparent"/>
                                <Setter Property="Placement" TargetName="PART_Popup" Value="Bottom"/>
                                <Setter TargetName="IconColumn" Property="MinWidth" Value="0"/>
                                <Setter TargetName="IconColumn" Property="Width" Value="0"/>
                                <Setter TargetName="HeaderHost" Property="HorizontalAlignment" Value="Center"/>
                                <Setter TargetName="HeaderColumn" Property="Width" Value="Auto"/>
                                <Setter TargetName="GestureColumn" Property="Width" Value="0"/>
                            </Trigger>
                            <Trigger Property="Role" Value="SubmenuItem">
                                <Setter Property="Padding" Value="8,6"/>
                                <Setter Property="Placement" TargetName="PART_Popup" Value="Right"/>
                            </Trigger>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter Property="Background" TargetName="Bd" Value="#3E3E42"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="#666666"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="WindowButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Width" Value="46"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderThickness="0">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#444444"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#666666"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CloseButtonStyle" TargetType="Button" BasedOn="{StaticResource WindowButtonStyle}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#E81123"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#F1707A"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Border x:Name="RootBorder" BorderBrush="#4A4A4A" BorderThickness="1">
        <DockPanel>
            <Grid DockPanel.Dock="Top" Height="32" Background="#2D2D2D" MouseLeftButtonDown="TitleBar_MouseLeftButtonDown">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBlock Text="&#xE713;" Grid.Column="0" FontFamily="Segoe MDL2 Assets" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0" FontSize="16" Foreground="#CCCCCC"/>

                <Menu Grid.Column="0" VerticalAlignment="Center" Margin="35,0,0,0" Background="Transparent"
                      WindowChrome.IsHitTestVisibleInChrome="True">
                    <MenuItem Header="_File">
                        <MenuItem Header="_New" Click="New_Click"/>
                        <Separator/>
                        <MenuItem Header="{Binding SaveMenuItemHeader}" Command="views:MainWindow.SaveFileCommand" InputGestureText="Ctrl+S"/>
                        <MenuItem Header="Save _As..." Command="views:MainWindow.SaveAsCommand" InputGestureText="Ctrl+Shift+S"/>
                        <MenuItem Header="Save A_ll" Command="views:MainWindow.SaveAllCommand"/>
                        <Separator/>
                        <MenuItem Header="{Binding CloseMenuItemHeader}" Command="views:MainWindow.CloseFileCommand" InputGestureText="Ctrl+W"/>
                        <MenuItem Header="Close All" Command="views:MainWindow.CloseAllFilesCommand" InputGestureText="Ctrl+Shift+W"/>
                        <Separator/>
                        <MenuItem Header="E_xit" Command="ApplicationCommands.Close" InputGestureText="Alt+F4"/>
                    </MenuItem>
                    <MenuItem Header="_View">
                        <MenuItem Header="Library Tree" IsCheckable="True" IsChecked="{Binding TheViewerView.IsClassTreeExpanded, Mode=TwoWay}" Command="views:MainWindow.ToggleLibraryTreeCommand" InputGestureText="Ctrl+1"/>
                        <MenuItem Header="Tool Preview" IsCheckable="True" IsChecked="{Binding TheViewerView.IsPreviewExpanded, Mode=TwoWay}" Command="views:MainWindow.ToggleToolPreviewCommand" InputGestureText="Ctrl+2"/>
                    </MenuItem>
                    <MenuItem Header="_Preferences">
                        <MenuItem Header="Application Settings..." Click="ApplicationSettings_Click"/>
                        <MenuItem Header="Layout Settings..." Click="LayoutSettings_Click"/>
                    </MenuItem>
                    <MenuItem Header="_Settings">
                        <MenuItem Header="Field _Definitions..." Click="FieldDefinitions_Click"/>
                    </MenuItem>
                    <MenuItem Header="_Help">
                        <MenuItem Header="Help Topics" Click="HelpTopics_Click"/>
                        <Separator/>
                        <MenuItem Header="_About" Click="About_Click"/>
                    </MenuItem>
                </Menu>

                <TextBlock Grid.Column="1" Text="NX Tool Manager" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#CCCCCC" FontWeight="SemiBold" IsHitTestVisible="False"/>

                <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right"
                            WindowChrome.IsHitTestVisibleInChrome="True">
                    <Button Style="{StaticResource WindowButtonStyle}" Content="&#xE921;" Click="MinimizeButton_Click"/>
                    <Button Style="{StaticResource WindowButtonStyle}" Content="&#xE922;" Click="MaximizeButton_Click"/>
                    <Button Style="{StaticResource CloseButtonStyle}"  Content="&#xE8BB;" Click="CloseButton_Click"/>
                </StackPanel>
            </Grid>

            <views:MainToolbarView DockPanel.Dock="Top"
                                   DataContext="{Binding}"
                                   LoadLibraryClick="LoadLibrary_Click"
                                   SaveLibraryClick="SaveLibrary_Click"
                                   PageNavigation="MainToolbar_PageNavigation"/>

            <Grid DockPanel.Dock="Bottom" Background="#2D2D2D">
                <Grid.Resources>
                    <Style x:Key="LogPanelButtonStyle" TargetType="Button">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="#CCCCCC"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
                        <Setter Property="FontSize" Value="12"/>
                        <Setter Property="Padding" Value="8"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Resources>

                <!-- Minimized View -->
                <Grid Height="30" Visibility="{Binding IsLogExpanded, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=Invert}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center" Margin="10,0">
                        <TextBlock Text="Total Errors: " Foreground="#CCCCCC"/>
                        <TextBlock Text="{Binding ErrorCount}" Foreground="IndianRed" FontWeight="SemiBold" Margin="0,0,20,0"/>
                        <TextBlock Text="Total Warnings: " Foreground="#CCCCCC"/>
                        <TextBlock Text="{Binding WarningCount}" Foreground="Orange" FontWeight="SemiBold"/>
                    </StackPanel>
                    <Button Grid.Column="1" Style="{StaticResource LogPanelButtonStyle}" ToolTip="Show Log" Click="ToggleLogPanel_Click" Content="&#xE96D;"/>
                </Grid>

                <!-- Expanded View -->
                <Grid MaxHeight="250" Visibility="{Binding IsLogExpanded, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Border Grid.Row="0" BorderBrush="#4A4A4A" BorderThickness="0,1,0,0">
                        <Grid Height="30">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Error Log" Grid.Column="0" VerticalAlignment="Center" Margin="10,0" FontWeight="SemiBold"/>
                            <Button Grid.Column="1" Style="{StaticResource LogPanelButtonStyle}" ToolTip="Hide Log" Click="ToggleLogPanel_Click" Content="&#xE96E;"/>
                        </Grid>
                    </Border>
                    <ListView Grid.Row="1" ItemsSource="{Binding LogEntries}" Background="#1E1E1E" BorderThickness="0">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" Margin="2">
                                    <TextBlock Text="{Binding Type}" FontWeight="Bold" Margin="0,0,10,0">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Foreground" Value="Orange"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Type}" Value="Error">
                                                        <Setter Property="Foreground" Value="IndianRed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <TextBlock Text="{Binding Message}" Foreground="#CCCCCC"/>
                                </StackPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </Grid>
            </Grid>

            <ContentControl x:Name="PageHost"/>

        </DockPanel>
    </Border>
</Window>

