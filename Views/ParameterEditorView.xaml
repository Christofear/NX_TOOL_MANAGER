<UserControl x:Class="NX_TOOL_MANAGER.Views.ParameterEditorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:views="clr-namespace:NX_TOOL_MANAGER.Views"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="300"
             Background="#1E1E1E"
             d:DataContext="{d:DesignInstance Type=views:ParameterEditorView, IsDesignTimeCreatable=True}">
    <UserControl.Resources>
        <Style TargetType="{x:Type TabControl}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid KeyboardNavigation.TabNavigation="Local">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <TabPanel Name="HeaderPanel" 
                                      Grid.Row="0" 
                                      Panel.ZIndex="1" 
                                      Margin="2,2,2,0" 
                                      IsItemsHost="True" 
                                      KeyboardNavigation.TabIndex="1" 
                                      Background="Transparent"/>

                            <Border Name="ContentPanel" Grid.Row="1" BorderBrush="#4A4A4A" BorderThickness="0,1,0,0" Background="{TemplateBinding Background}" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter Name="PART_SelectedContentHost" Margin="{TemplateBinding Padding}" ContentSource="SelectedContent"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Foreground" Value="#CCCCCC"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="8,3"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border Name="Border" Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0,0,0,2" Margin="0,0,2,0">
                            <ContentPresenter x:Name="ContentSite" 
                                              VerticalAlignment="Center" 
                                              HorizontalAlignment="Center" 
                                              ContentSource="Header" 
                                              Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                                    <Condition Binding="{Binding Header, RelativeSource={RelativeSource Self}}" Value="Tool" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="#3399FF"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                                    <Condition Binding="{Binding Header, RelativeSource={RelativeSource Self}}" Value="Segments" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="#EF5350"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                                    <Condition Binding="{Binding Header, RelativeSource={RelativeSource Self}}" Value="Holder" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="#FFA726"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                                    <Condition Binding="{Binding Header, RelativeSource={RelativeSource Self}}" Value="Shank" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="#66BB6A"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                                    <Condition Binding="{Binding Header, RelativeSource={RelativeSource Self}}" Value="More" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="White"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TextBlock" x:Key="LabelStyle">
            <Setter Property="Foreground" Value="#CCCCCC"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Background" Value="#2A2A2A"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#4A4A4A"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style TargetType="Expander">
            <Setter Property="Foreground" Value="#CCCCCC"/>
            <Setter Property="Margin" Value="0,0,0,10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Expander">
                        <StackPanel>
                            <ToggleButton x:Name="HeaderSite" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" OverridesDefaultStyle="True">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Grid Background="Transparent" MinHeight="22">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Path x:Name="Arrow" Grid.Column="0" Data="M 0 0 L 4 4 L 8 0 Z" Stroke="{TemplateBinding Foreground}" StrokeThickness="1.5" VerticalAlignment="Center" Margin="5,0"/>
                                            <ContentPresenter Grid.Column="1" Content="{TemplateBinding Content}" VerticalAlignment="Center"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter TargetName="Arrow" Property="RenderTransform">
                                                    <Setter.Value>
                                                        <RotateTransform Angle="180" CenterX="4" CenterY="2"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Foreground" Value="White"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                                <ToggleButton.Content>
                                    <TextBlock Text="{Binding Header, RelativeSource={RelativeSource TemplatedParent}}" FontWeight="SemiBold" FontSize="14"/>
                                </ToggleButton.Content>
                            </ToggleButton>
                            <ContentPresenter x:Name="ExpanderContent" Visibility="Collapsed" Margin="15,5,0,5"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Setter TargetName="ExpanderContent" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid>
        <TabControl>
            <TabItem Header="Tool">
                <ScrollViewer VerticalScrollBarVisibility="Auto" Padding="10">
                    <ItemsControl ItemsSource="{Binding ParameterCategories, RelativeSource={RelativeSource AncestorType=views:ParameterEditorView}}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Expander Header="{Binding CategoryName}" IsExpanded="{Binding IsExpanded, Mode=TwoWay}">
                                    <ItemsControl ItemsSource="{Binding Parameters}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Grid Margin="0,4">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="2*"/>
                                                        <ColumnDefinition Width="3*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock Grid.Column="0" Text="{Binding Definition.Description}" Style="{StaticResource LabelStyle}" ToolTip="{Binding Definition.Description}" Margin="0,0,10,0"/>
                                                    <TextBox Grid.Column="1" Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}" PreviewKeyDown="TextBox_PreviewKeyDown" PreviewTextInput="TextBox_PreviewTextInput"/>
                                                </Grid>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </Expander>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="Segments" 
                     Visibility="{Binding SegmentProfileTabVisibility, RelativeSource={RelativeSource AncestorType=views:ParameterEditorView}}">
                <ContentControl Content="{Binding SegmentEditorControl, RelativeSource={RelativeSource AncestorType=views:ParameterEditorView}}"/>
            </TabItem>

            <TabItem Header="Holder">
                <TextBlock Text="Holder Shape Data" Foreground="White" Margin="10" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </TabItem>
            <TabItem Header="Shank">
                <TextBlock Text="Shank Shape Data" Foreground="White" Margin="10" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </TabItem>
            <TabItem Header="More">
                <TextBlock Text="More Parameters (e.g., Trackpoints)" Foreground="White" Margin="10" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>