<UserControl x:Class="NX_TOOL_MANAGER.Views.ViewerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:views="clr-namespace:NX_TOOL_MANAGER.Views"
             xmlns:models="clr-namespace:NX_TOOL_MANAGER.Models"
             xmlns:services="clr-namespace:NX_TOOL_MANAGER.Services"
             Background="#1E1E1E" Foreground="White">

    <UserControl.Resources>
        <!-- I've updated your context menu styles to be dark-themed to match the rest of the application -->
        <Style TargetType="ContextMenu">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border x:Name="Border" Background="#2D2D2D" BorderBrush="#4A4A4A" BorderThickness="1">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="MenuItem">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="Transparent"/>
            <Style.Triggers>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" Value="#3E3E42"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Your existing styles -->
        <Style TargetType="GridSplitter">
            <Setter Property="Background" Value="#4A4A4A"/>
            <Setter Property="Width" Value="3"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="ShowsPreview" Value="True"/>
        </Style>
        <Style TargetType="TreeView">
            <Setter Property="Background" Value="#2D2D2D"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <Style TargetType="TreeViewItem">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="4,2"/>
            <Setter Property="IsExpanded" Value="True"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#3E3E42"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True"/>
                        <Condition Property="IsKeyboardFocusWithin" Value="True"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="#3E3E42"/>
                    <Setter Property="Foreground" Value="White"/>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True"/>
                        <Condition Property="IsKeyboardFocusWithin" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="White"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>

        <!-- Your existing data templates -->
        <HierarchicalDataTemplate DataType="{x:Type models:DatDocumentRef}" ItemsSource="{Binding Document.Classes}">
            <Border Background="Transparent" ToolTipService.ShowDuration="60000" ToolTip="{Binding FullPath, Mode=OneWay}">
                <TextBlock Text="{Binding FileName, Mode=OneWay}" TextTrimming="CharacterEllipsis">
                    <TextBlock.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Unload"
                                      Command="{Binding UnloadLibraryCommand, Source={x:Static services:LibraryManager.Instance}}"
                                      CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                            <Separator/>
                            <MenuItem Header="Save"
                                      Command="{Binding SaveLibraryCommand, Source={x:Static services:LibraryManager.Instance}}"
                                      CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                            <MenuItem Header="Save As..."
                                      Command="{Binding SaveAsLibraryCommand, Source={x:Static services:LibraryManager.Instance}}"
                                      CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                        </ContextMenu>
                    </TextBlock.ContextMenu>
                </TextBlock>
            </Border>
        </HierarchicalDataTemplate>
        <HierarchicalDataTemplate DataType="{x:Type models:DatClass}" ItemsSource="{Binding Children}">
            <TextBlock>
                <Run Text="{Binding DisplayName, Mode=OneWay}"/><Run Text=" ("/><Run Text="{Binding Rows.Count, Mode=OneWay}"/><Run Text=")"/>
            </TextBlock>
        </HierarchicalDataTemplate>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" MinWidth="180" MaxWidth="300"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="260"/>
        </Grid.ColumnDefinitions>

        <!-- This TreeView is bound to your LibraryManager service -->
        <TreeView x:Name="Tree"
                  Grid.Column="0"
                  Padding="8"
                  DataContext="{x:Static services:LibraryManager.Instance}"
                  ItemsSource="{Binding Libraries}"
                  SelectedItemChanged="Tree_SelectedItemChanged"/>

        <GridSplitter Grid.Column="1"/>

        <!-- The DataContext of this grid is set in your C# code-behind -->
        <views:LibraryGridView Grid.Column="2"
                               x:Name="GridView"
                               DataContext="{Binding ElementName=Tree, Path=SelectedItem}"/>

        <GridSplitter Grid.Column="3"/>

        <!-- UPDATED: This now correctly binds the PreviewPane's SelectedRow to the GridView's SelectedRow -->
        <views:PreviewPane Grid.Column="4"
                           SelectedRow="{Binding ElementName=GridView, Path=SelectedRow}"/>
    </Grid>
</UserControl>

